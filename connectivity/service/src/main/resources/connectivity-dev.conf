ditto {
  http {
    hostname = "localhost"
    port = 8085 # for local development
    port = ${?HTTP_PORT}
  }

  metrics.prometheus.port = 9014
  metrics.prometheus.port = ${?PROMETHEUS_PORT}

  connectivity {
    connection {
      blocked-hostnames = "" // for development, allow "localhost" which would normally be on that block-list
      blocked-hostnames = ${?CONNECTIVITY_CONNECTION_BLOCKED_HOSTNAMES}

      priority-update-interval = 10s
      priority-update-interval = ${?CONNECTIVITY_PRIORITY_UPDATE_INTERVAL}
    }
    persistence-ping {
      # journal tag to query to find our which connectionPersistenceActors to ping (reconnect)
      journal-tag = "always-alive"
      journal-tag = ${?RECONNECT_JOURNAL_TAG}
    }
  }
}

akka {

  management.http.port = 25610
  management.http.port = ${?AKKA_MANAGEMENT_PORT}

  remote {
    # for debugging purpose
    watch-failure-detector {
      expected-response-after = 120s
    }

    artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 2561
      canonical.port = ${?REMOTE_PORT}

      advanced.idle-cpu-level = 1 # for development, no max throughput required

      bind.bind-timeout = 6s
    }
  }

  cluster {
    # for debugging purpose
    failure-detector {
      expected-response-after = 120s
      threshold = 16.0
      acceptable-heartbeat-pause = 120s
    }

    sharding {
      remember-entities = on
    }

    seed-nodes = [
      "akka://ditto-cluster@127.0.0.1:2552", # port of the policies service to join in cluster
      "akka://ditto-cluster@"${akka.remote.artery.canonical.hostname}":"${akka.remote.artery.canonical.port}
    ]
  }
}
