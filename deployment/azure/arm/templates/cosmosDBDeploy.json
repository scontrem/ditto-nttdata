{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "accountName": {
            "type": "string",
            "defaultValue": "[concat('mongodb-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Cosmos DB account name"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the Cosmos DB account."
            }
        },
        "defaultConsistencyLevel": {
            "type": "string",
            "defaultValue": "Session",
            "allowedValues": ["Eventual", "ConsistentPrefix", "Session", "BoundedStaleness", "Strong"],
            "metadata": {
                "description": "The default consistency level of the Cosmos DB account."
            }
        },
        "maxStalenessPrefix": {
            "type": "int",
            "defaultValue": 100000,
            "minValue": 10,
            "maxValue": 2147483647,
            "metadata": {
                "description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
            }
        },
        "maxIntervalInSeconds": {
            "type": "int",
            "defaultValue": 300,
            "minValue": 5,
            "maxValue": 86400,
            "metadata": {
                "description": "Max lag time (seconds). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
            }
        },
        "multipleWriteLocations": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [true, false],
            "metadata": {
                "description": "Enable multi-master to make all regions writable."
            }
        },
        "throughputThingsJournal": {
            "type": "int",
            "defaultValue": 800,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB journal collection"
            }
        },
        "throughputThingsSnaps": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB snapshot collection"
            }
        },
        "throughputThingsMetadata": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB metadata collection"
            }
        },
        "throughputConnectivityJournal": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB journal collection"
            }
        },
        "throughputConnectivitySnaps": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB snapshots collection"
            }
        },
        "throughputConnectivityMetadata": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB metadata collection"
            }
        },
        "throughputPoliciesJournal": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB journal collection"
            }
        },
        "throughputPoliciesMetadata": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB metadata collection"
            }
        },
        "throughputPoliciesSnaps": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB snapshots collection"
            }
        },
        "throughputConciergeJournal": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB journal collection"
            }
        },
        "throughputConciergeSnaps": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB snapshots collection"
            }
        },
        "throughputConciergeMetadata": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB metadata collection"
            }
        },
        "throughputTest": {
            "type": "int",
            "defaultValue": 400,
            "minValue": 400,
            "maxValue": 1000000,
            "metadata": {
                "description": "The throughput for the Mongo DB test collections"
            }
        },
        "collectionNameThingsJournal": {
            "type": "string",
            "defaultValue": "things_journal@org.eclipse.ditto",
            "metadata": {
                "description": "Name of the Mongo DB journal collection."
            }
        },
        "collectionNameThingsSnaps": {
            "type": "string",
            "defaultValue": "things_snaps@org.eclipse.ditto",
            "metadata": {
                "description": "Name of the Mongo DB snapshots collection."
            }
        },
        "collectionNameThingsMetadata": {
            "type": "string",
            "defaultValue": "things_metadata",
            "metadata": {
                "description": "Name of the Mongo DB metadata collection."
            }
        },
        "collectionNameConnectivityJournal": {
            "type": "string",
            "defaultValue": "connection_journal",
            "metadata": {
                "description": "Name of the Mongo DB journal collection."
            }
        },
        "collectionNameConnectivitySnaps": {
            "type": "string",
            "defaultValue": "connection_snaps",
            "metadata": {
                "description": "Name of the Mongo DB snapshots collection."
            }
        },
        "collectionNameConnectivityMetadata": {
            "type": "string",
            "defaultValue": "connection_metadata",
            "metadata": {
                "description": "Name of the Mongo DB metadata collection."
            }
        },
        "collectionNamePoliciesJournal": {
            "type": "string",
            "defaultValue": "policies_journal@org.eclipse.ditto",
            "metadata": {
                "description": "Name of the Mongo DB journal collection."
            }
        },
        "collectionNamePoliciesMetadata": {
            "type": "string",
            "defaultValue": "policies_metadata",
            "metadata": {
                "description": "Name of the Mongo DB metadata collection."
            }
        },
        "collectionNamePoliciesSnaps": {
            "type": "string",
            "defaultValue": "policies_snaps@org.eclipse.ditto",
            "metadata": {
                "description": "Name of the Mongo DB snapshots collection."
            }
        },
        "collectionNameConciergeJournal": {
            "type": "string",
            "defaultValue": "batch_supervisor_journal",
            "metadata": {
                "description": "Name of the Mongo DB journal collection."
            }
        },
        "collectionNameConciergeSnaps": {
            "type": "string",
            "defaultValue": "batch_supervisor_snaps",
            "metadata": {
                "description": "Name of the Mongo DB snapshots collection."
            }
        },
        "collectionNameConciergeMetadata": {
            "type": "string",
            "defaultValue": "batch_supervisor_metadata",
            "metadata": {
                "description": "Name of the Mongo DB metadata collection."
            }
        },
        "collectionNameTest": {
            "type": "string",
            "defaultValue": "test",
            "metadata": {
                "description": "Name of the Mongo DB test collections."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of an existing VNET that will contain this AKS deployment."
            }
        },
        "virtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VNET resource group"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Subnet name that will contain the AKS nodes."
            }
        }
    },
    "variables": {
        "accountName": "[toLower(parameters('accountName'))]",
        "vnetSubnetId": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'),parameters('subnetName'))]",
        "consistencyPolicy": {
            "Eventual": {
                "defaultConsistencyLevel": "Eventual"
            },
            "ConsistentPrefix": {
                "defaultConsistencyLevel": "ConsistentPrefix"
            },
            "Session": {
                "defaultConsistencyLevel": "Session"
            },
            "BoundedStaleness": {
                "defaultConsistencyLevel": "BoundedStaleness",
                "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
                "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
            },
            "Strong": {
                "defaultConsistencyLevel": "Strong"
            }
        }
    },
    "resources": [{
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "name": "[variables('accountName')]",
            "apiVersion": "2016-03-31",
            "location": "[parameters('location')]",
            "kind": "MongoDB",
            "properties": {
                "consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
                "databaseAccountOfferType": "Standard",
                "enableMultipleWriteLocations": "[parameters('multipleWriteLocations')]",
                "isVirtualNetworkFilterEnabled": true,

                "virtualNetworkRules": [{
                    "id": "[variables('vnetSubnetID')]",
                    "ignoreMissingVNetServiceEndpoint": false
                }]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
            "name": "[concat(variables('accountName'), '/mongodb/', 'concierge')]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('accountName'))]"],
            "properties": {
                "resource": {
                    "id": "concierge"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'concierge/', parameters('collectionNameConciergeMetadata'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'concierge')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameConciergeMetadata')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputConciergeMetadata')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'concierge/', parameters('collectionNameConciergeJournal'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'concierge')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameConciergeJournal')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputConciergeJournal')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'concierge/', parameters('collectionNameConciergeSnaps'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'concierge')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameConciergeSnaps')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputConciergeSnaps')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'concierge/', parameters('collectionNameTest'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'concierge')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameTest')]"
                },
                "options": {
                    "throughput": "[parameters('throughputTest')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
            "name": "[concat(variables('accountName'), '/mongodb/', 'connectivity')]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('accountName'))]"],
            "properties": {
                "resource": {
                    "id": "connectivity"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'connectivity/', parameters('collectionNameTest'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'connectivity')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameTest')]"
                },
                "options": {
                    "throughput": "[parameters('throughputTest')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'connectivity/', parameters('collectionNameConnectivityJournal'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'connectivity')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameConnectivityJournal')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputConnectivityJournal')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'connectivity/', parameters('collectionNameConnectivityMetadata'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'connectivity')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameConnectivityMetadata')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputConnectivityMetadata')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'connectivity/', parameters('collectionNameConnectivitySnaps'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'connectivity')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameConnectivitySnaps')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputConnectivitySnaps')]"
                }
            }
        },

        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
            "name": "[concat(variables('accountName'), '/mongodb/', 'policies')]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('accountName'))]"],
            "properties": {
                "resource": {
                    "id": "policies"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'policies/', parameters('collectionNameTest'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'policies')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameTest')]"
                },
                "options": {
                    "throughput": "[parameters('throughputTest')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'policies/', parameters('collectionNamePoliciesJournal'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'policies')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNamePoliciesJournal')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputPoliciesJournal')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'policies/', parameters('collectionNamePoliciesMetadata'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'policies')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNamePoliciesMetadata')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputPoliciesMetadata')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'policies/', parameters('collectionNamePoliciesSnaps'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'policies')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNamePoliciesSnaps')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputPoliciesSnaps')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
            "name": "[concat(variables('accountName'), '/mongodb/', 'things')]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('accountName'))]"],
            "properties": {
                "resource": {
                    "id": "things"
                }
            }
        },

        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'things/', parameters('collectionNameTest'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'things')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameTest')]"
                },
                "options": {
                    "throughput": "[parameters('throughputTest')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'things/', parameters('collectionNameThingsJournal'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'things')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameThingsJournal')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputThingsJournal')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'things/', parameters('collectionNameThingsMetadata'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'things')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameThingsMetadata')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputThingsMetadata')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
            "name": "[concat(variables('accountName'), '/mongodb/', 'things/', parameters('collectionNameThingsSnaps'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": ["[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'mongodb', 'things')]"],
            "properties": {
                "resource": {
                    "id": "[parameters('collectionNameThingsSnaps')]",
                    "shardKey": {
                        "pid": "Hash"
                    }
                },
                "options": {
                    "throughput": "[parameters('throughputThingsSnaps')]"
                }
            }
        }
    ],
    "outputs": {
        "primaryMasterKey": {
            "type": "string",
            "value": "[listKeys(variables('accountName'), '2016-03-31').primaryMasterKey]"
        }
    }
}