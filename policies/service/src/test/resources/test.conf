ditto {

  extensions {
    pre-enforcer-provider {
      extension-class = org.eclipse.ditto.policies.enforcement.pre.PreEnforcerProvider
      extension-config = {
        pre-enforcers = [
          "org.eclipse.ditto.policies.enforcement.pre.BlockedNamespacePreEnforcer",
          "org.eclipse.ditto.policies.enforcement.pre.CommandWithOptionalEntityPreEnforcer"
        ]
      }
    }
    snapshot-adapter = {
      extension-class = "org.eclipse.ditto.policies.service.persistence.serializer.PolicyMongoSnapshotAdapter"
    }
  }

  mongodb {
    uri = "mongodb://localhost:27017/policies"
  }

  policies {
    include "policy-test"
  }

  mapping-strategy.implementation = "org.eclipse.ditto.policies.api.PoliciesMappingStrategies"
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "WARNING"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # for log messages during the actor system is starting up and shutting down:
  stdout-loglevel = "WARNING"

  log-config-on-start = off

  # disable coordinated shutdown for tests
  coordinated-shutdown.terminate-actor-system = off
  coordinated-shutdown.run-by-actor-system-terminate = off

  actor.provider = cluster
  actor {
    serializers {
      bson = "org.eclipse.ditto.internal.utils.test.mongo.BsonDocumentSerializer"
    }
    serialization-bindings {
      "org.bson.BsonDocument" = bson
    }
  }

  test {
    # factor by which to scale timeouts during tests, e.g. to account for shared
    # build system load
    timefactor = 1.0

    # duration of EventFilter.intercept waits after the block is finished until
    # all required messages are received
    filter-leeway = 10s

    # duration to wait in expectMsg and friends outside of within() block
    # by default
    single-expect-default = 10s

    # The timeout that is added as an implicit by DefaultTimeout trait
    default-timeout = 10s

    calling-thread-dispatcher {
      type = akka.testkit.CallingThreadDispatcherConfigurator
    }
  }

  cluster {
    roles = [
      "policies",
      "blocked-namespaces-aware"
    ]
  }
}

akka {
  management.http.port = 0
  remote {
    artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }
}

akka.contrib.persistence.mongodb.mongo {
  driver = "akka.contrib.persistence.mongodb.ScalaDriverPersistenceExtension"
}

akka.persistence {
  journal.auto-start-journals = [
    "akka-contrib-mongodb-persistence-policies-journal"
  ]
  snapshot-store.auto-start-snapshot-stores = [
    "akka-contrib-mongodb-persistence-policies-snapshots"
  ]
}

akka-contrib-mongodb-persistence-policies-journal {
  class = "akka.persistence.inmemory.journal.InMemoryAsyncWriteJournal"
  plugin-dispatcher = "policy-persistence-dispatcher"

  ask-timeout = 10s

  event-adapters {
    mongodbobject = "org.eclipse.ditto.policies.service.persistence.serializer.DefaultPolicyMongoEventAdapter"
  }

  event-adapter-bindings {
    "org.eclipse.ditto.base.model.signals.events.Event" = mongodbobject
    "org.bson.BsonValue" = mongodbobject
  }
}

akka-contrib-mongodb-persistence-policies-snapshots {
  class = "akka.persistence.inmemory.snapshot.InMemorySnapshotStore"
  plugin-dispatcher = "policy-persistence-dispatcher"

  ask-timeout = 10s
}

policy-persistence-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 4
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 3.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 32
  }
  throughput = 5
}

blocked-namespaces-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 4
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 3.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 32
    parallelism-max = ${?DEFAULT_DISPATCHER_PARALLELISM_MAX}
  }
  throughput = 5
}
